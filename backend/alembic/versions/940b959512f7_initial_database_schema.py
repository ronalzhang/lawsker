"""Initial database schema

Revision ID: 940b959512f7
Revises: 
Create Date: 2025-07-04 23:51:37.149135

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '940b959512f7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('tenant_code', sa.String(length=50), nullable=False),
    sa.Column('mode', sa.Enum('SAAS', 'ON_PREMISE', name='tenantmode'), nullable=False),
    sa.Column('status', sa.Enum('TRIAL', 'ACTIVE', 'SUSPENDED', 'EXPIRED', name='tenantstatus'), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=True),
    sa.Column('feature_flags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('system_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('api_limits', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('billing_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('subscription_plan', sa.String(length=50), nullable=True),
    sa.Column('max_users', sa.UUID(), nullable=True),
    sa.Column('max_cases', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('trial_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('domain')
    )
    op.create_index(op.f('ix_tenants_tenant_code'), 'tenants', ['tenant_code'], unique=True)
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('system_configs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_editable', sa.Boolean(), nullable=False),
    sa.Column('min_value', sa.String(length=50), nullable=True),
    sa.Column('max_value', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ACTIVE', 'INACTIVE', 'BANNED', name='userstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_phone_number'), 'users', ['phone_number'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('clients',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('client_type', sa.String(length=50), nullable=True),
    sa.Column('business_license', sa.String(length=100), nullable=True),
    sa.Column('contact_person', sa.String(length=100), nullable=True),
    sa.Column('contact_phone', sa.String(length=20), nullable=True),
    sa.Column('contact_email', sa.String(length=255), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('sales_owner_id', sa.UUID(), nullable=False),
    sa.Column('cooperation_level', sa.String(length=20), nullable=True),
    sa.Column('credit_rating', sa.String(length=10), nullable=True),
    sa.Column('total_cases', sa.Integer(), nullable=True),
    sa.Column('total_amount', sa.DECIMAL(precision=18, scale=2), nullable=True),
    sa.Column('success_rate', sa.DECIMAL(precision=5, scale=4), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['sales_owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profiles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('id_card_number', sa.String(length=18), nullable=True),
    sa.Column('qualification_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('did', sa.String(length=255), nullable=True),
    sa.Column('verification_status', sa.Enum('UNVERIFIED', 'PENDING', 'VERIFIED', 'FAILED', name='verificationstatus'), nullable=False),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('did')
    )
    op.create_index(op.f('ix_profiles_id_card_number'), 'profiles', ['id_card_number'], unique=False)
    op.create_table('user_roles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('wallets',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('balance', sa.DECIMAL(precision=18, scale=2), nullable=False),
    sa.Column('withdrawable_balance', sa.DECIMAL(precision=18, scale=2), nullable=False),
    sa.Column('frozen_balance', sa.DECIMAL(precision=18, scale=2), nullable=False),
    sa.Column('total_earned', sa.DECIMAL(precision=18, scale=2), nullable=False),
    sa.Column('total_withdrawn', sa.DECIMAL(precision=18, scale=2), nullable=False),
    sa.Column('commission_count', sa.DECIMAL(precision=10, scale=0), nullable=False),
    sa.Column('last_commission_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('cases',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('case_number', sa.String(length=100), nullable=False),
    sa.Column('debtor_info', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('case_amount', sa.DECIMAL(precision=18, scale=2), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ASSIGNED', 'IN_PROGRESS', 'COMPLETED', 'CLOSED', 'EXPIRED', name='casestatus'), nullable=False),
    sa.Column('assigned_to_user_id', sa.UUID(), nullable=True),
    sa.Column('sales_user_id', sa.UUID(), nullable=False),
    sa.Column('ai_risk_score', sa.Integer(), nullable=True),
    sa.Column('data_quality_score', sa.Integer(), nullable=True),
    sa.Column('data_freshness_score', sa.Integer(), nullable=True),
    sa.Column('debt_creation_date', sa.Date(), nullable=False),
    sa.Column('last_follow_up_date', sa.Date(), nullable=True),
    sa.Column('legal_status', sa.Enum('VALID', 'EXPIRING_SOON', 'EXPIRED', name='legalstatus'), nullable=False),
    sa.Column('limitation_expires_at', sa.Date(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['sales_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cases_case_number'), 'cases', ['case_number'], unique=True)
    op.create_table('case_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('case_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.String(length=255), nullable=False),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('old_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('new_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('insurances',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('case_id', sa.UUID(), nullable=False),
    sa.Column('policy_number', sa.String(length=255), nullable=False),
    sa.Column('insurance_company', sa.String(length=255), nullable=False),
    sa.Column('premium_amount', sa.DECIMAL(precision=18, scale=2), nullable=False),
    sa.Column('coverage_amount', sa.DECIMAL(precision=18, scale=2), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACTIVE', 'CLAIMED', 'EXPIRED', name='insurancestatus'), nullable=False),
    sa.Column('effective_date', sa.Date(), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('claim_amount', sa.DECIMAL(precision=18, scale=2), nullable=True),
    sa.Column('claim_date', sa.Date(), nullable=True),
    sa.Column('claim_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('case_id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('case_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=18, scale=2), nullable=False),
    sa.Column('transaction_type', sa.Enum('PAYMENT', 'REFUND', 'PAYOUT', name='transactiontype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', name='transactionstatus'), nullable=False),
    sa.Column('payment_gateway', sa.String(length=50), nullable=True),
    sa.Column('gateway_txn_id', sa.String(length=255), nullable=True),
    sa.Column('gateway_response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('gateway_txn_id')
    )
    op.create_table('commission_splits',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('transaction_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_at_split', sa.String(length=50), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=18, scale=2), nullable=False),
    sa.Column('percentage', sa.DECIMAL(precision=5, scale=4), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PAID', 'FAILED', name='commissionstatus'), nullable=False),
    sa.Column('payout_method', sa.String(length=50), nullable=True),
    sa.Column('payout_account', sa.String(length=255), nullable=True),
    sa.Column('payout_txn_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('commission_splits')
    op.drop_table('transactions')
    op.drop_table('insurances')
    op.drop_table('case_logs')
    op.drop_index(op.f('ix_cases_case_number'), table_name='cases')
    op.drop_table('cases')
    op.drop_table('wallets')
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_profiles_id_card_number'), table_name='profiles')
    op.drop_table('profiles')
    op.drop_table('clients')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_phone_number'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('system_configs')
    op.drop_table('roles')
    op.drop_index(op.f('ix_tenants_tenant_code'), table_name='tenants')
    op.drop_table('tenants')
    # ### end Alembic commands ### 